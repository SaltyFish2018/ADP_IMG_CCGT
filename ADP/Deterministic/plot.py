
import pandas as pd
from pandas import DataFrame, Series
import matplotlib.pyplot as plt
import numpy as np
from pylab import rcParams


rcParams['figure.figsize'] = 9, 6


# df_DE = pd.read_excel("C:\\Users\\之之\\Desktop\\ADP_DATA\\forcasted_electricity_demand.xls")
# df_DQ = pd.read_excel("C:\\Users\\之之\\Desktop\\ADP_DATA\\forcasted_heat_demand.xls")
# df_P_WT = pd.read_excel("C:\\Users\\之之\\Desktop\\ADP_DATA\\wind_turbine.xls")
# df_price = pd.read_excel("C:\\Users\\之之\\Desktop\\ADP_DATA\\forcasted_elec_price.xls")
# periods = len(df_DE)
# print("periods = {}".format(periods))

# # Deterministic scenario
# demand_Elec = Series(df_DE['E_plus'])
# demand_Heat = Series(df_DQ['Q_plus_1'])
# demand_Elec.index = range(1, periods + 1)
# demand_Heat.index = range(1, periods + 1)
#
# # Prepare Exogenous Data
# df_P_WT = pd.read_excel("C:\\Users\\之之\\Desktop\\ADP_DATA\\wind_turbine.xls")
# P_WT_a = Series(df_P_WT['Theoretical_Power_Curve (MW)'])
# P_WT_a.index = range(1, periods + 1)
#
# fig, ax1 = plt.subplots(1,1)
# ax2 = ax1.twinx()
#
# # Plot demand
#
# ax1.set_xticks(demand_Heat.index)
#
# ax1.set_xlabel("Time Period (interval=15min)", fontsize = 15, fontname = 'Times New Roman')
# ax1.set_ylabel("Demand (MW)", fontsize = 15, fontname = 'Times New Roman')
# ax1.plot(demand_Elec,label='Power Demand',linewidth=2)
# ax1.plot(demand_Heat,label='Heat Demand',linewidth=2)
#
# ax1.set_ylim(0,65)
#
# ax1.set_xticks(range(1,101,5))
# ax1.set_xlim(-1.5,102)
#
#
#
# bar1 = ax2.bar(P_WT_a.index, P_WT_a, 0.7, label='WT Generation',color="limegreen")
# ax2.set_xlabel("Time Period (interval=15min)", fontsize = 15, fontname = 'Times New Roman')
# ax2.set_ylim(0,10)
#
# plt.grid(linestyle='--')
# ax1.legend(loc='upper left', fontsize='small')
# ax2.legend(loc='upper right', fontsize='small')
#
# plt.savefig('D:\\Nuts\CCGT\ADP\Deterministic\Demand.jpeg',dpi=500,bbox_inches='tight')
#
# plt.show()


# price = Series(df_price['price/$'])
# price.index = range(1, periods + 1)
# plt.step(price.index,price, color='black', linewidth=3)
# plt.grid('minor', linestyle='-.')
# plt.xlim(0,98)
# plt.xlabel("Time Period (interval=15min)", fontsize = 15, fontname = 'Times New Roman')
# plt.ylabel('Elctricity Price ($/kWh)', fontsize = 15, fontname = 'Times New Roman')
#
# plt.savefig('D:\\Nuts\CCGT\ADP\Deterministic\Elec_price.jpeg',dpi=500,bbox_inches='tight')
#
# plt.show()



# cost=[110852.23674115374, 109898.67916527357, 109158.31256460938, 108587.66223749804, 108136.8169687985, 107776.53324139914, 107462.04716580418, 107224.89855704732, 107030.41361301593, 106869.87151835271, 106736.55469121822, 106625.2342983136, 106531.80333682103, 106453.0100126029, 106386.2610184118, 106329.47452387628, 106280.9691110188, 106239.37906395012, 106203.58921031767, 106172.68441765396, 106145.91017447777, 106122.6416244423, 106102.35909466294, 106084.62864746054, 106069.08654251418, 106055.42671458503, 106043.39079823025, 106032.75994536879, 106023.3481704916, 106014.9969234359, 106007.57063851369, 106000.95306976583, 105995.04426225917, 105989.75804021016, 105985.01991672516, 105980.76534876772, 105976.93827580538, 105973.48989235074, 105970.37761397926, 105967.56420389247, 105965.01703310573, 105962.70745217882, 105960.61025632145, 105958.70322887969, 105956.9667507906, 105955.38346570318, 105953.93799218776, 105952.61667587652, 105951.40737554306]
# plt.plot(cost,linewidth=5)
# plt.xlabel("Iteration", fontsize = 20, fontname='Times New Roman')
# plt.ylabel("Operation cost of the microgrid ($)", fontsize = 20, fontname='Times New Roman')

# df_wind = pd.read_excel("F:\\WT\WindMeanSpeed\\WindDirectSpeed\\T1.xlsx")
# # df_wind = df_wind[df_wind['LV ActivePower (kW)']>=1000]
# active_power = Series(df_wind['LV ActivePower (kW)'])
# theoretic= Series(df_wind['Theoretical_Power_Curve (KWh)'])
# x = range(1,50531)
# active_power.index = x
# theoretic.index = x
#
# plt.grid('major', axis='y')
# plt.ylabel("KiloWatts",fontsize = 20, fontname = 'Times New Roman')
# plt.ylim(-10,4000)
# my_x = Series(df_wind['M'])
#
# plt.plot(theoretic.index[::80], theoretic[::80])
# # plt.plot(theoretic.index, theoretic)
#
# frequency = 4500
# plt.xticks(x[::frequency], my_x[::frequency])
# plt.tick_params(labelsize=15)

# cost_general = [22018.89775409447, 21952.527212921166, 21902.768457521604, 21811.914787058064, 21790.521050157957, 21777.138777961067, 21751.01522214678, 21725.838732562886, 21633.00984717873, 21641.122726471418, 21609.572640651946, 21651.42535624165, 21617.660978384214, 21676.838380545185, 21624.8166316305, 21662.43194701196, 21699.824018283518, 21772.472646364506, 21648.296017661087, 21577.575929165796, 21746.59783450917, 21704.265025566998, 21651.80695409573, 21652.337986282797, 21589.966415521172, 21600.681107683773, 21620.336763589672, 21690.678839852713, 21620.106745951285, 21613.29205378869, 21618.675095509672, 21630.924782491747, 21709.835193449406, 21684.702522004933, 21692.30017015421, 21707.696414018046, 21726.29641401743, 21714.798134530938, 21702.638530173237, 21694.67727853466, 21687.177278534662, 21694.677278534662, 21687.24025068644, 21643.617379968742, 21642.239251446408, 21683.864034992417, 21645.29480700227, 21670.621910747403, 21634.739251446714, 21644.7663089634, 21637.20333680862, 21589.436675309207, 21672.799987874037, 21644.7663089634, 21687.085783007893, 21669.505704074898, 21671.628601311437, 21682.18415686699, 21682.18415686699, 21626.02527571542, 21628.50027571542, 21628.500275715418, 21584.75462341704, 21593.823716013358, 21612.427619513724, 21671.397026145933, 21674.103601311435, 21690.274802196436, 21688.740385597615, 21681.20570960012, 21691.761265155674, 21633.761368052234, 21620.499237331176, 21620.4362651794, 21623.1428403449, 21633.698395900457, 21622.9112651794, 21600.03833950688, 21571.867088092884, 21611.814007268702, 21569.16051292738, 21568.76835695567, 21571.47493212117, 21632.725915789095, 21586.020035413283, 21570.576061451487, 21579.64515404781, 21570.576061451487, 21577.62116474391, 21570.121164744214, 21570.576061451487, 21577.62116474391, 21577.621164743905, 21560.369486286294, 21570.576061451487, 21559.248424766516, 21567.869486285985, 21547.472757004696, 21570.576061451487, 21557.224435462616, 21577.62116474391, 21550.1793321702, 21559.248424766512, 21537.4899150238, 21517.09318574251, 21599.878923509343, 21575.113912990713, 21642.034162533346, 21572.40733782521, 21572.40733782521, 21567.869486285985, 21547.472757004693, 21630.25849477153, 21572.40733782521, 21559.248424769517, 21609.111449821983, 21557.4477570077, 21609.111449821983, 21551.748424766512, 21557.4477570077, 21609.111449821983, 21557.4477570077, 21609.111449821983, 21559.248424769517, 21554.42680601064, 21604.880263321735, 21558.850096538223, 21558.850096538226, 21605.436326388248, 21558.850096538223, 21607.586838487234, 21495.739561583996, 21502.730915921326, 21604.880263321735, 21554.65012755272, 21554.514117444785, 21503.239561587005, 21551.33498469933, 21554.514117444785, 21503.239561587005, 21551.33498469933, 21552.42468279424, 21503.239561587, 21559.187766737115, 21473.327900364275, 21617.274193423254, 21478.398889015167, 21535.897381472758, 21486.988787022987, 21590.27952834902, 21486.988787022983, 21590.279528349016, 21479.99743268866, 21477.55256916217, 21489.463787022985, 21592.754528349018, 21489.463787022985, 21494.82408854517, 21590.27952834902, 21486.988787022987, 21492.349088545172, 21492.806035332105, 21536.35432825969, 21487.44573380992, 21492.806035332105, 21533.039185406305, 21450.07480821341, 21456.842841005655, 21560.206138519763, 21456.842841005655, 21492.582713790027, 21590.585709781946, 21477.714414587033, 21536.131006717616, 21472.919131546652, 21536.131006717613, 21487.222412267838, 21511.874588679177, 21487.222412267838, 21487.222412267838, 21492.582713790027, 21590.585709781946, 21487.222412267838, 21487.222412267838, 21492.582713790027, 21536.131006717613, 21487.222412267838, 21492.582713790027, 21536.131006717616, 21480.231057933517, 21487.222412267838, 21487.222412267838, 21511.874588679173, 21487.222412267838, 21487.222412267838, 21484.74741226784, 21480.231057933517, 21533.169385437664, 21486.561839532333, 21461.74898763728, 21446.12798689604, 21528.144385437667, 21446.12798689604, 21528.144385437663, 21528.144385437667, 21448.64463024252, 21456.723987637277, 21456.723987637277, 21451.6080047868, 21523.019713838505, 21442.83696395423, 21440.72199179986, 21442.83696395423, 21442.83696395423, 21525.13468599288, 21431.196082719405, 21440.36196395423, 21440.36196395423, 21440.36196395423, 21438.337974650334, 21520.63569668898, 21440.36196395423, 21440.36196395423, 21438.33797465033, 21438.33797465033, 21428.660236342443, 21428.67943937293, 21525.134685992878, 21442.83696395423, 21525.13468599288, 21440.721991799852, 21438.33797465033, 21442.836963954232, 21442.83696395423, 21438.337974650334, 21520.63569668898, 21437.88696395423, 21437.886963954228, 21435.862974650332, 21423.88415633254, 21520.18468599288, 21413.987825377724, 21409.810082255717, 21520.184685992877, 21416.011814681624, 21435.862974650332, 21416.462825377723, 21416.011814681624, 21520.18468599288, 21409.810082255717, 21435.712437053735, 21413.987825377724, 21445.38696395423, 21386.08325411554, 21383.60825411554, 21385.632243419437, 21407.958403388147, 21416.011814681624, 21435.862974650336, 21413.98782537772, 21416.462825377723, 21520.18468599288, 21413.987825377724, 21435.862974650332, 21416.462825377723, 21435.862974650336, 21413.98782537772, 21438.33797465033, 21416.011814681624, 21435.86297465033, 21413.987825377724, 21520.63569668898, 21416.462825377726, 21438.187437053733, 21416.462825377726, 21450.122520869074, 21416.462825377723, 21438.33797465033, 21450.122520869074, 21416.462825377726, 21438.33797465033, 21416.462825377726, 21450.122520869074, 21532.42024290772, 21416.462825377726, 21440.571454203255, 21437.542177229247, 21413.192027956637, 21449.326723447986, 21437.542177229243, 21413.192027956637, 21437.542177229247, 21439.926194378768, 21437.542177229243, 21413.192027956637, 21427.86443892135, 21427.883641951837, 21518.16069668898, 21437.044092107688]
#
# # cost_improved = [22018.89775409447, 21774.009553595715, 21643.187181231908, 21569.261847566835, 21534.594253765772, 21442.473003368894, 21433.119598473946, 21409.11666735292, 21388.073796022843, 21355.42578571757, 21390.165005018047, 21390.573121673107, 21287.39261918702, 21225.30724719185, 21248.21798711364, 21258.218869030636, 21331.665172900026, 21270.651455551797, 21259.32483060394, 21259.32483060394, 21227.174705650148, 21214.05153900094, 21249.1112428313, 21199.56018466661, 21185.42040299544, 21192.060184666614, 21240.87927562355, 21215.234101005663, 21228.86523701177, 21202.187934503723, 21215.81907050953, 21202.187934503727, 21212.767701270757, 21205.859058111047, 21193.64846130832, 21193.564695137753, 21193.648461308625, 21200.288242980103, 21187.286051889514, 21200.288242979797, 21205.312899774934, 21199.610496208625, 21214.967831159352, 21211.36957471153, 21204.137381204113, 21204.137381204117, 21211.36957471153, 21204.137381204113, 21204.13738120412, 21195.860929045855, 21170.837210845595, 21170.837210845595, 21156.693373982103, 21156.693373982103, 21167.146026868264, 21156.693373981492, 21153.874033001266, 21167.146026867653, 21153.874033001266, 21155.24740572852, 21153.240504847767, 21153.240504847767, 21161.927402512465, 21153.240504847767, 21161.927402512465, 21145.740504847654, 21145.740504847654, 21145.740504847658, 21145.740504847654, 21145.74050484765, 21145.740504847654, 21145.740504847658, 21146.07760090406, 21145.740504847658, 21145.74050484765, 21146.07760090417, 21146.07760090417, 21146.07760090417, 21145.740504847767, 21146.077600904173, 21146.077600904173, 21138.57760090116, 21138.240504847767, 21138.240504847767, 21137.015628126443, 21136.413537560325, 21136.413537560322, 21136.413537560325, 21127.62517388178, 21127.023083315667, 21127.023083315664, 21127.023083315667, 21140.51251649554, 21127.02308331566, 21127.62517388178, 21127.62517388178, 21127.023083315664, 21127.62517388178, 21127.023083315664, 21127.02308331566, 21127.023083315667, 21140.51251649554, 21127.62517388178, 21127.62517388178, 21127.62517388178, 21127.023083315667, 21127.023083315664, 21127.023083315667, 21118.80864589849, 21119.41073646461, 21119.41073646461, 21119.41073646461, 21118.80864589849, 21118.80864589849, 21119.41073646461, 21118.808645898494, 21119.410736464608, 21118.80864589849, 21118.80864589849]
# cost_improved = [22018.89775409447, 21774.009553575754, 21643.184959736136, 21644.077173069367, 21481.3503644484, 21391.247129995056, 21367.94012982415, 21327.94596244752, 21330.70500079154, 21291.214059507118, 21303.71896075178, 21273.210177626246, 21227.30276656411, 21257.029289971084, 21246.27432659882, 21225.596859690275, 21260.39154250111, 21216.68205178663, 21205.963092759408, 21205.9630927628, 21212.09490508105, 21191.47173843153, 21215.519854142418, 21185.420402995136, 21215.519854151717, 21215.519854151713, 21200.402873204555, 21214.68249399466, 21192.797480255562, 21200.739269938756, 21200.739269939062, 21192.797480255354, 21218.622479090925, 21184.258007050987, 21192.199796734694, 21184.458957558712, 21184.25800704854, 21211.057459254254, 21189.148033103455, 21182.154336044914, 21201.979120451448, 21194.746926943662, 21193.76468303427, 21193.76468303427, 21186.532489525973, 21186.532489525973, 21186.26468303376, 21172.04113519504, 21172.0411351984, 21163.764683040143, 21176.89202300859, 21176.892023005486, 21169.739540476323, 21156.693373973467, 21160.387660393368, 21156.693373973467, 21153.87403299324, 21160.387660393368, 21153.87403299324, 21155.247405720496, 21153.24050483974, 21153.240504831916, 21145.740504838628, 21145.740504830806, 21149.67593691, 21145.74050483863, 21149.675936917825, 21145.740504838628, 21145.740504838628, 21145.740504838628, 21145.740504830803, 21145.740504838628, 21138.240504832705, 21138.240504838628, 21138.240504830803, 21138.00103611368, 21138.001036105852, 21138.001036105852, 21138.240504830803, 21138.001036106965, 21138.00103610696, 21138.001036106965, 21138.240504831912, 21138.240504831916, 21137.015628110592, 21136.413537544475, 21136.413537544475, 21137.015628110592, 21136.413537544475, 21136.413537544475, 21136.41353754478, 21136.41353754478, 21136.41353754478, 21136.41353754478, 21143.051282664623, 21137.015628110894, 21137.015628110894, 21137.376766533525, 21137.376766530164, 21136.77467596405, 21136.77467596405, 21137.376766530168, 21136.77467596405, 21137.376766530164, 21136.36267297485, 21136.96476354097, 21136.362672974854, 21136.36267297485, 21143.000418094696, 21136.96476354097, 21136.96476354097, 21136.96476354097, 21136.96476354097, 21136.96476354097, 21128.862672975432, 21128.714763541437, 21128.71476354086, 21128.71476354086, 21128.11267297474, 21128.714763540862, 21122.953072420874, 21122.95307242087, 21126.60210615462, 21136.396397485274, 21136.396397485274, 21129.00393698733, 21135.753937013153, 21135.753937013153, 21129.003936995152, 21129.003936995152, 21122.25393698733, 21138.363482759487, 21138.3634827506, 21122.253936995265, 21138.363482750603, 21138.363482750603, 21138.363482750603, 21121.080293884566, 21121.080293891013, 21122.253936995374, 21138.36348274171, 21138.363482741715, 21138.363482741715, 21138.36348274171, 21121.080293891016, 21122.253936995377, 21138.36348274171, 21130.863482750603, 21130.863482750603, 21130.863482750603, 21130.863482750603, 21130.863482750603, 21130.863482750603, 21130.863482750603, 21130.863482750603, 21130.863482750603, 21113.580293884566, 21113.580293884563, 21113.580293887622, 21113.580293887622, 21113.580293887622, 21113.580293887622, 21130.86348275366, 21115.86348275366, 21092.922336939788, 21092.922336930897, 21092.9223369309, 21092.9223369309, 21203.56945206759, 21160.33866247299, 21160.33866247299, 21092.922336939897, 21160.33866247299, 21160.33866247299, 21092.922336939904, 21092.83866248199, 21085.338662481685, 21085.33866248169, 21085.338662481685, 21160.338662472688, 21145.338662481576, 21145.338662481576, 21145.338662481576, 21145.338662481572, 21145.338662481576, 21132.811491288565, 21077.838662481576, 21077.83866248157, 21106.80010350098, 21077.838662472685, 21106.80010350098, 21137.838662472685, 21106.80010350098, 21077.838662472685, 21106.80010350098, 21065.31149127998, 21094.272932308275, 21065.31149127998, 21057.895165746893, 21125.31149127998, 21094.272932308275, 21065.311491279983, 21065.31149127998, 21094.272932308275, 21065.31149127998, 21094.272932308275, 21065.311491279983, 21057.895165746893, 21125.31149127998, 21094.272932308275, 21065.31149127998, 21065.31149127998, 21094.272932308275, 21065.31149127998, 21065.311491279987, 21094.27293230828, 21065.311491279987, 21125.311491279987, 21065.311491279983, 21094.272932308275, 21065.311491279983, 21065.311491279987, 21065.311491279983, 21065.311491279983, 21070.500882667093, 21099.462323695385, 21097.945588814422, 21094.327037246214, 21096.462323699685, 21096.462323699685, 21096.462323699685, 21096.462323699685, 21096.462323699685, 21083.41615719683, 21083.41615719683, 21083.416157196833, 21083.41615719683, 21083.41615719683, 21083.416157196833, 21083.416157196833, 21083.41615719683, 21083.416157196833, 21083.416157196833, 21083.41615719683, 21083.41615719683, 21078.22676581431, 21083.416157196833, 21074.01562812761, 21078.22676581431, 21074.015628127614, 21074.01562812761, 21074.015628127614, 21078.22676581431, 21074.015628127614, 21077.614996584558, 21081.8261342682, 21077.614996581506, 21077.614996581502, 21077.012906015385, 21077.6149965815, 21077.012906015385, 21077.012906015385, 21077.012906015385, 21077.012906015385, 21077.012906015385, 21077.012906015385, 21077.012906015385, 21077.012906011976, 21077.012906011976, 21077.614996578093, 21077.012906011976, 21077.012906011976, 21077.01290601198, 21077.012906008567, 21077.01290600857, 21077.012906008567, 21077.012906008567, 21077.614996574688, 21077.012906008567, 21077.012906008567, 21077.012906008567, 21077.012906008567, 21077.012906008567, 21077.012906008567, 21077.01290600857, 21077.614996574688, 21077.012906008567, 21077.012906008567, 21077.012906008567, 21077.012906008567, 21077.012906008567, 21077.012906008567, 21077.614996574688, 21077.012906008567, 21077.012906008567, 21077.012906008567, 21077.012906008567, 21077.012906008567, 21077.012906008567]
#
# plt.plot(cost_general, label='Original updating method',linewidth=3)
# plt.plot(cost_improved, label='Proposed updating method',linewidth=3)
# plt.xlabel("Iteration", fontsize = 15, fontname='Times New Roman')
# plt.ylabel("Operation cost of the microgrid ($)", fontsize = 15, fontname='Times New Roman')
# plt.xlim(0)
# plt.legend()
# plt.grid(linestyle='--', axis='y')
# plt.savefig('D:\\Nuts\CCGT\ADP\Deterministic\our_proposed_updating_method.jpeg',dpi=500,bbox_inches='tight')
#
# plt.show()

# df_ccgt = pd.read_excel("D:\\Nuts\CCGT\ADP\Deterministic\CCGT_step_response.xlsx")
# time = list(df_ccgt['n'])
# time = list(map(lambda x:x*0.6,time))
# # input_gas = list(df_ccgt['gas'])
# output_heat = list(df_ccgt['heat'])
# output_power = list(df_ccgt['power'])
# heat_noise = list(df_ccgt['heat_noise'])
# power_noise = list(df_ccgt['power_noise'])
#
# heat = list(map(lambda x:x[0]+x[1],zip(output_heat,heat_noise)))
# power = list(map(lambda x:x[0]+x[1],zip(output_power,power_noise)))
#
# fig, ax1 = plt.subplots(1,1)
# ax2 = ax1.twinx()
# # ax3 = ax1.twinx()
#
# # Plot demand
#
# ax1.set_xlabel("Time (s)", fontsize = 12, fontname = 'Times New Roman')
# ax1.set_ylabel("Output Energy (MW)", fontsize = 12, fontname = 'Times New Roman')
# ax1.plot(time,power,label='Power',linewidth=1.5,color='blue')
# ax2.plot(time,heat,label='Heat',linewidth=1.5,color='red')
# # ax3.plot(input_gas,linewidth=2,color='black')
# ax1.set_xlim(0)
# ax1.set_ylim(37.5,39.5)
# ax2.set_ylim(48.75,50.25)
# # ax3.set_ylim(2.3,3.3)
#
#
# plt.grid(linestyle='--')
# ax1.legend(loc='upper left')
# ax2.legend(loc='upper right')
#
# plt.savefig('D:\\Nuts\CCGT\ADP\Deterministic\CCGT_step_response.jpeg',dpi=500,bbox_inches='tight')
#
# plt.show()